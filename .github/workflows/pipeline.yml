name: Test -> Deploy

  # defining the branch that will trigger the pipeline
on:
  # when pushing
  push:
    branches: [ "main" ]
  # when PRing
  pull_request:
    branches: [ "main" ]

# config env
env:
  MIX_ENV: test

# can't change variables, just read
permissions:
  contents: read

jobs:
  # job name
  test:
    # services is what have to be setted up to run the job, like db
    services:
      db:
        image: postgres:14
        ports: ['5432:5432']
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    name: Test on OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      # Specify the OTP and Elixir versions to use when building
      # and running the workflow steps.
      matrix:
        otp: ['25.0.4']       # Define the OTP version [required] [usually, erlang version]
        elixir: ['1.14.0']
    steps:
    - name: setup elixir
      uses: erlef/setup-beam@v1
      with:
        otp-version: ${{matrix.otp}}
        elixir-version: ${{matrix.elixir}}
      env:
        ImageOS: ubuntu20

    # TODO: read about wtf is this
    - name: Checkout
      uses: actions/checkout@v3

    - name: Cache deps
      id: cache-deps
      uses: actions/cache@v3
      env:
        cache-name: cache-elixir-deps
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}

    - name: Cache compiled build
      id: cache-build
      uses: actions/cache@v3
      env: 
        cache-name: cache-compiled-build
      with:
        path: _build
        key: ${{ runner.os }}-mix-${{ env.cache-name }}-${{ hashFiles('**/mix.lock') }}
        restore-keys: |
          ${{ runner.os }}-mix-${{ env.cache-name }}-
          ${{ runner.os }}-mix-

    - name: Install dependencies
      run: mix deps.get

    - name: Compile
      run: mix compile

    - name: Formatting
      run: mix format --check-formatted

    - name: Credo
      run: mix credo

    - name: Run tests
      run: mix test

    - name: Create test result file
      run: echo "all tests passed" >> test_file.txt

    - name: Upload test result file
      uses: actions/upload-artifact@v3
      with:
        name: test-result
        path: test-result.txt
